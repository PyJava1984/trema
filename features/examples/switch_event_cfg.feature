Feature: Switch Event forwarding entry configuration command
  
  Switch Event forwarding configuration command 
  (`add_fwd_entry`, `delete_fwd_entry`, `set_fwd_entries`, `dump_fwd_entries`)
  is a set of commands to manipulate event forwarding entries of 
  Switch Manager and Switch Daemons.
  
  Configuring event forwarding entry on a Switch Daemon will change 
  where the event of specified type will be forwarded to
  on the specified Switch.
  
  Configuring event forwarding entry on a Switch Manager will change 
  where the event of specified type will be forwarded to
  on the all newly connected Switch after configuration.
  
  These commands may be useful when: 
  * One needs to check which controller is handling certain event.
  * Add another controller to mirror events for debugging purpose.
  * Let controller, which was started afterwards, to start listening to events.
  
  Note that this command will only change where each event is forwarded, 
  and it will **not** emulate any switch events, which normally occurs when a 
  controller is newly connected to a switch, etc.
  * swich_ready event will **not** be generated by adding a entry to existing switch.
  * disconnected event will **not** be generated by removing a entry from existing switch.

  Scenario: add_fwd_entry Usage
    When I run `trema run '../../objects/examples/switch_event_cfg/add_fwd_entry -h'`
    Then the output should contain:
      """
      Add OpenFlow Switch Manager/Daemon event forward entry.
       Both Switch Mgr/Daemon: add_fwd_entry -t EVENT_TYPE service_name
       Only Switch Manager   : add_fwd_entry -m -t EVENT_TYPE service_name
       Only Switch Daemon    : add_fwd_entry -s SWITCH_DPID -t EVENT_TYPE service_name
      
       EVENT_TYPE:
        -t, --type={vendor,packet_in,port_status,state_notify} Specify event type.
      """

  Scenario: delete_fwd_entry Usage
    When I run `trema run '../../objects/examples/switch_event_cfg/delete_fwd_entry -h'`
    Then the output should contain:
      """
      Delete OpenFlow Switch Manager/Daemon event forward entry.
       Both Switch Mgr/Daemon: delete_fwd_entry -t EVENT_TYPE service_name
       Only Switch Manager   : delete_fwd_entry -m -t EVENT_TYPE service_name
       Only Switch Daemon    : delete_fwd_entry -s SWITCH_DPID -t EVENT_TYPE service_name
      
       EVENT_TYPE:
        -t, --type={vendor,packet_in,port_status,state_notify} Specify event type.
      """

  Scenario: set_fwd_entries Usage
    When I run `trema run '../../objects/examples/switch_event_cfg/set_fwd_entries -h'`
    Then the output should contain:
      """
      Set OpenFlow Switch Manager/Daemon event forward entries.
       Switch Manager: set_fwd_entries -m -t EVENT_TYPE service_name1,service_name2,...
       Switch Daemon : set_fwd_entries -s SWITCH_DPID -t EVENT_TYPE service_name1,service_name2,...
      
       EVENT_TYPE:
        -t, --type={vendor,packet_in,port_status,state_notify} Specify event type.
      """

  Scenario: dump_fwd_entries Usage
    When I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries -h'`
    Then the output should contain:
      """
      Dump OpenFlow Switch Manager/Daemon event forward entries.
       Switch Manager: dump_fwd_entries -m -t EVENT_TYPE
       Switch Daemon : dump_fwd_entries -s SWITCH_DPID -t EVENT_TYPE
      
       EVENT_TYPE:
        -t, --type={vendor,packet_in,port_status,state_notify} Specify event type.
      """

  Scenario Outline: Dump Switch Manager's event forward configuration for each type
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries -m -t <type>'`
    Then the output should contain "Current service name list:"
    Then the output should contain "  repeater_hub"

    Examples: 
      | type         |
      | vendor       |
      | packet_in    |
      | port_status  |
      | state_notify |

  Scenario Outline: Dump Switch Daemon's event forward configuration for each type on each switch
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries -s <switch> -t <type>'`
    Then the output should contain "Current service name list:"
    Then the output should contain "  repeater_hub"

    Examples: 
      | switch | type         |
      | 0x1    | vendor       |
      | 0x1    | packet_in    |
      | 0x1    | port_status  |
      | 0x1    | state_notify |
      | 0x2    | vendor       |
      | 0x2    | packet_in    |
      | 0x2    | port_status  |
      | 0x2    | state_notify |

  Scenario Outline: Add 'mirror' to All Switch Manager/Daemon's event forward configuration for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/add_fwd_entry -t packet_in mirror'`
    Then the output should contain "Operation Succeeded."
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries <option> -t packet_in'`
    Then the output should contain "Current service name list:"
    Then the output should match /.*  repeater_hub.*/
    Then the output should match /.*  mirror.*/

    Examples: 
      | target | option |
      | SW MGR | -m     |
      | SW 0x1 | -s 0x1 |
      | SW 0x2 | -s 0x2 |

  Scenario Outline: Delete 'repeater_hub' from All Switch Manager/Daemon's event forward configuration for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/delete_fwd_entry -t packet_in repeater_hub '`
    Then the output should contain "Operation Succeeded."
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries <option> -t packet_in'`
    Then the output should not match /Current service name list:.*  repeater_hub/

    Examples: 
      | target | option |
      | SW MGR | -m     |
      | SW 0x1 | -s 0x1 |
      | SW 0x2 | -s 0x2 |

  Scenario Outline: Switch added after event forward configuration manipulation should also reflect new configuration.
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    Given I run `trema run '../../objects/examples/switch_event_cfg/add_fwd_entry -t packet_in mirror'`
    Given the output should contain "Operation Succeeded."
    Given a file named "switch_event_cfg_add.conf" with:
      """
      vswitch { datapath_id 0x3 }
      """
    Given I run `trema run -c switch_event_cfg_add.conf -d`
    When I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries <option> -t packet_in'`
    Then the output should contain "Current service name list:"
    Then the output should match /.*  repeater_hub.*/
    Then the output should match /.*  mirror.*/

    Examples: 
      | target | option |
      | SW MGR | -m     |
      | SW 0x1 | -s 0x1 |
      | SW 0x2 | -s 0x2 |
      | SW 0x3 | -s 0x3 |

  Scenario Outline: Add 'mirror' only to Switch Manager's event forward configuration for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/add_fwd_entry -m -t packet_in mirror'`
    Then the output should contain "Updated service name list:"
    Then the output should contain "  repeater_hub"
    Then the output should contain "  mirror"
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries -s <switch> -t packet_in'`
    Then the output should match /Current service name list:.*  repeater_hub/
    Then the output should not match /Current service name list:.*  mirror/

    Examples: 
      | switch |
      | 0x1    |
      | 0x2    |

  Scenario Outline: Delete 'repeater_hub' only from Switch Manager's event forward configuration for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/delete_fwd_entry -m -t packet_in repeater_hub'`
    Then the output should contain "Updated service name list is empty."
    Then the output should not contain "  repeater_hub"
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries -s <switch> -t packet_in'`
    Then the output should match /Current service name list:.*  repeater_hub/

    Examples: 
      | switch |
      | 0x1    |
      | 0x2    |

  Scenario Outline: Replace Switch Manager's event forward configuration to 'mirror' and 'filter' for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/set_fwd_entries -m -t packet_in mirror,filter'`
    Then the output should contain "Updated service name list:"
    Then the output should contain "  mirror"
    Then the output should contain "  filter"
    Then the output should not contain "  repeater_hub"
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries -s <switch> -t packet_in'`
    Then the output should match /Current service name list:.*  repeater_hub/
    Then the output should not match /Current service name list:.*  mirror/
    Then the output should not match /Current service name list:.*  filter/

    Examples: 
      | switch |
      | 0x1    |
      | 0x2    |

  Scenario Outline: Add 'mirror' only to Switch Daemon 0x1's event forward configuration for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/add_fwd_entry -s 0x1 -t packet_in mirror'`
    Then the output should contain "Updated service name list:"
    Then the output should contain "  repeater_hub"
    Then the output should contain "  mirror"
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries <option> -t packet_in'`
    Then the output should match /Current service name list:.*  repeater_hub/
    Then the output should not match /Current service name list:.*  mirror/

    Examples: 
      | target | option |
      | SW MGR | -m     |
      | SW 0x2 | -s 0x2 |

  Scenario Outline: Delete 'repeater_hub' only from Switch Daemon 0x1's event forward configuration for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/delete_fwd_entry -s 0x1 -t packet_in repeater_hub'`
    Then the output should contain "Updated service name list is empty."
    Then the output should not contain "  repeater_hub"
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries <option> -t packet_in'`
    Then the output should match /Current service name list:.*  repeater_hub/

    Examples: 
      | target | option |
      | SW MGR | -m     |
      | SW 0x2 | -s 0x2 |

  Scenario Outline: Replace Switch Daemon 0x1's event forward configuration to 'mirror' and 'filter' for packet_in
    Given I trema run "../../objects/examples/repeater_hub/repeater_hub" with 2 switches
    When I run `trema run '../../objects/examples/switch_event_cfg/set_fwd_entries -s 0x1 -t packet_in mirror,filter'`
    Then the output should contain "Updated service name list:"
    Then the output should contain "  mirror"
    Then the output should contain "  filter"
    Then the output should not contain "  repeater_hub"
    Then I run `trema run '../../objects/examples/switch_event_cfg/dump_fwd_entries <option> -t packet_in'`
    Then the output should match /Current service name list:.*  repeater_hub/
    Then the output should not match /Current service name list:.*  mirror.*/
    Then the output should not match /Current service name list:.*  filter.*/

    Examples: 
      | target | option |
      | SW MGR | -m     |
      | SW 0x2 | -s 0x2 |
