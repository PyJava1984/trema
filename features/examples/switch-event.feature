Feature: Switch Event forwarding configuration Ruby API
  
  Switch Event forwarding configuration Ruby API is a 
  API set to add/remove an event forwarding entry to 
  Switch Manager and Switch Daemons.
  
  The types of switch event which can be forwarded are:
   :vendor, :packet_in, :port_stat, and :state_notify.
  
  Configuring event forwarding entry on a Switch Daemon will change 
  where the event of specified type will be forwarded to
  on the specified Switch.
  
  Configuring event forwarding entry on a Switch Manager will change 
  where the event of specified type will be forwarded to
  on all newly connected Switch after configuration.
  
  In another words, configuring Switch Daemon will change the behavior of 
  existing switches, and configuring Switch Manager will change the behavior 
  of switches which may appear in the future.
  
  These API can be used when: 
  * Adding another controller to mirror events for debugging purpose.
  * Letting a controller, which was started afterwards, 
    to listen on existing switch's events.
  * Removing controller which was listening on events for debugging purpose.
  * Replacing the controller which is handling switch event type.
  * One needs to check which controller is handling certain event type.
  
  Following example scenarios show the simple usage example for each APIs.
  All the example scenarios below specify result handling as Ruby block, but 
  they can be omitted if result checking is not necessary.
  Please see the YARD generated document for each API details.
  
  Note that this APIs will only change where each event is forwarded, 
  and it will **not** emulate any switch events, which normally occurs when a 
  controller is newly connected to a switch, etc.
  * swich_ready event will **not** be generated by adding an entry to existing switch.
  * disconnected event will **not** be generated by removing an entry from existing switch.

  Scenario: add_forward_entry_to_all_switches for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "AddAllTest.rb" with:
      """
      class AddAllTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = add_forward_entry_to_all_switches :vendor, "add_vendor" do | success |
            info ":vendor result:#{success}"
            dump_forward_entries_from_switch 0x1, :vendor do | success, services |
                info ":vendor 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :vendor do | success, services |
                info ":vendor manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_all_switches :packet_in, "add_packet_in" do | success |
            info ":packet_in result:#{success}"
            dump_forward_entries_from_switch 0x1, :packet_in do | success, services |
                info ":packet_in 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :packet_in do | success, services |
                info ":packet_in manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_all_switches :port_status, "add_port_status" do | success |
            info ":port_status result:#{success}"
            dump_forward_entries_from_switch 0x1, :port_status do | success, services |
                info ":port_status 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :port_status do | success, services |
                info ":port_status manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_all_switches :state_notify, "add_state_notify" do | success |
            info ":state_notify result:#{success}"
            dump_forward_entries_from_switch 0x1, :state_notify do | success, services |
                info ":state_notify 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :state_notify do | success, services |
                info ":state_notify manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./AddAllTest.rb -c nw_dsl.conf -d`
    And wait until "AddAllTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :vendor result:true
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :vendor 0x1 result:true services:["add_vendor", "AddAllTest"]
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :vendor manager result:true services:["add_vendor", "AddAllTest"]
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :packet_in result:true
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :packet_in 0x1 result:true services:["add_packet_in", "AddAllTest"]
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :packet_in manager result:true services:["add_packet_in", "AddAllTest"]
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :port_status result:true
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :port_status 0x1 result:true services:["add_port_status", "AddAllTest"]
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :port_status manager result:true services:["add_port_status", "AddAllTest"]
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :state_notify result:true
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :state_notify 0x1 result:true services:["add_state_notify", "AddAllTest", "switch_manager"]
      """
    Then the file "../../tmp/log/AddAllTest.log" should contain:
      """
      :state_notify manager result:true services:["add_state_notify", "AddAllTest"]
      """

  Scenario: delete_forward_entry_from_all_switches for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "DeleteAllTest.rb" with:
      """
      class DeleteAllTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = delete_forward_entry_from_all_switches :vendor, "DeleteAllTest" do | success |
            info ":vendor result:#{success}"
            dump_forward_entries_from_switch 0x1, :vendor do | success, services |
                info ":vendor 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :vendor do | success, services |
                info ":vendor manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_all_switches :packet_in, "DeleteAllTest" do | success |
            info ":packet_in result:#{success}"
            dump_forward_entries_from_switch 0x1, :packet_in do | success, services |
                info ":packet_in 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :packet_in do | success, services |
                info ":packet_in manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_all_switches :port_status, "DeleteAllTest" do | success |
            info ":port_status result:#{success}"
            dump_forward_entries_from_switch 0x1, :port_status do | success, services |
                info ":port_status 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :port_status do | success, services |
                info ":port_status manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_all_switches :state_notify, "DeleteAllTest" do | success |
            info ":state_notify result:#{success}"
            dump_forward_entries_from_switch 0x1, :state_notify do | success, services |
                info ":state_notify 0x1 result:#{success} services:#{services.inspect}"
            end
            dump_forward_entries_from_switch_manager :state_notify do | success, services |
                info ":state_notify manager result:#{success} services:#{services.inspect}"
            end
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./DeleteAllTest.rb -c nw_dsl.conf -d`
    And wait until "DeleteAllTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :vendor result:true
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :vendor 0x1 result:true services:[]
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :vendor manager result:true services:[]
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :packet_in result:true
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :packet_in 0x1 result:true services:[]
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :packet_in manager result:true services:[]
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :port_status result:true
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :port_status 0x1 result:true services:[]
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :port_status manager result:true services:[]
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :state_notify result:true
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :state_notify 0x1 result:true services:["switch_manager"]
      """
    Then the file "../../tmp/log/DeleteAllTest.log" should contain:
      """
      :state_notify manager result:true services:[]
      """

  Scenario: add_forward_entry_to_switch for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "AddSwitchTest.rb" with:
      """
      class AddSwitchTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = add_forward_entry_to_switch 0x1, :vendor, "add_vendor" do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_switch 0x1, :packet_in, "add_packet_in" do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_switch 0x1, :port_status, "add_port_status" do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_switch 0x1, :state_notify, "add_state_notify" do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./AddSwitchTest.rb -c nw_dsl.conf -d`
    And wait until "AddSwitchTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/AddSwitchTest.log" should contain:
      """
      :vendor result:true services:["add_vendor", "AddSwitchTest"]
      """
    Then the file "../../tmp/log/AddSwitchTest.log" should contain:
      """
      :packet_in result:true services:["add_packet_in", "AddSwitchTest"]
      """
    Then the file "../../tmp/log/AddSwitchTest.log" should contain:
      """
      :port_status result:true services:["add_port_status", "AddSwitchTest"]
      """
    Then the file "../../tmp/log/AddSwitchTest.log" should contain:
      """
      :state_notify result:true services:["add_state_notify", "AddSwitchTest", "switch_manager"]
      """

  Scenario: delete_forward_entry_from_switch for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "DeleteSwitchTest.rb" with:
      """
      class DeleteSwitchTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = delete_forward_entry_from_switch 0x1, :vendor, "DeleteSwitchTest" do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_switch 0x1, :packet_in, "DeleteSwitchTest" do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_switch 0x1, :port_status, "DeleteSwitchTest" do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_switch 0x1, :state_notify, "DeleteSwitchTest" do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./DeleteSwitchTest.rb -c nw_dsl.conf -d`
    And wait until "DeleteSwitchTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/DeleteSwitchTest.log" should contain:
      """
      :vendor result:true services:[]
      """
    Then the file "../../tmp/log/DeleteSwitchTest.log" should contain:
      """
      :packet_in result:true services:[]
      """
    Then the file "../../tmp/log/DeleteSwitchTest.log" should contain:
      """
      :port_status result:true services:[]
      """
    Then the file "../../tmp/log/DeleteSwitchTest.log" should contain:
      """
      :state_notify result:true services:["switch_manager"]
      """

  Scenario: set_forward_entries_to_switch for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "SetSwitchTest.rb" with:
      """
      class SetSwitchTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = set_forward_entries_to_switch 0x1, :vendor, ["SetSwitchTest","vendor"] do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = set_forward_entries_to_switch 0x1, :packet_in, ["SetSwitchTest","packet_in"] do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = set_forward_entries_to_switch 0x1, :port_status, ["SetSwitchTest","port_status"] do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = set_forward_entries_to_switch 0x1, :state_notify, ["SetSwitchTest","state_notify","switch_manager"] do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./SetSwitchTest.rb -c nw_dsl.conf -d`
    And wait until "SetSwitchTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/SetSwitchTest.log" should contain:
      """
      :vendor result:true services:["SetSwitchTest", "vendor"]
      """
    Then the file "../../tmp/log/SetSwitchTest.log" should contain:
      """
      :packet_in result:true services:["SetSwitchTest", "packet_in"]
      """
    Then the file "../../tmp/log/SetSwitchTest.log" should contain:
      """
      :port_status result:true services:["SetSwitchTest", "port_status"]
      """
    Then the file "../../tmp/log/SetSwitchTest.log" should contain:
      """
      :state_notify result:true services:["SetSwitchTest", "state_notify", "switch_manager"]
      """

  Scenario: dump_forward_entries_from_switch for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      event :vendor => "vendor", :packet_in => "packet_in", :port_status => "port_status", :state_notify => "state_notify"
      """
    And a file named "DumpSwitchTest.rb" with:
      """
      class DumpSwitchTest < Controller
        include SwitchEvent
      
        oneshot_timer_event :test_start, 0
      
        def test_start
          info "start test_start"
          dump_forward_entries_from_switch 0x1, :vendor do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
      
          dump_forward_entries_from_switch 0x1, :packet_in do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
      
          dump_forward_entries_from_switch 0x1, :port_status do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
      
          dump_forward_entries_from_switch 0x1, :state_notify do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./DumpSwitchTest.rb -c nw_dsl.conf -d`
    And wait until "DumpSwitchTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/DumpSwitchTest.log" should contain:
      """
      :vendor result:true services:["vendor"]
      """
    Then the file "../../tmp/log/DumpSwitchTest.log" should contain:
      """
      :packet_in result:true services:["packet_in"]
      """
    Then the file "../../tmp/log/DumpSwitchTest.log" should contain:
      """
      :port_status result:true services:["port_status"]
      """
    Then the file "../../tmp/log/DumpSwitchTest.log" should contain:
      """
      :state_notify result:true services:["state_notify", "switch_manager"]
      """

  Scenario: add_forward_entry_to_switch_manager for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "AddSwitchManagerTest.rb" with:
      """
      class AddSwitchManagerTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = add_forward_entry_to_switch_manager :vendor, "add_vendor" do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_switch_manager :packet_in, "add_packet_in" do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_switch_manager :port_status, "add_port_status" do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = add_forward_entry_to_switch_manager :state_notify, "add_state_notify" do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./AddSwitchManagerTest.rb -c nw_dsl.conf -d`
    And wait until "AddSwitchManagerTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/AddSwitchManagerTest.log" should contain:
      """
      :vendor result:true services:["add_vendor", "AddSwitchManagerTest"]
      """
    Then the file "../../tmp/log/AddSwitchManagerTest.log" should contain:
      """
      :packet_in result:true services:["add_packet_in", "AddSwitchManagerTest"]
      """
    Then the file "../../tmp/log/AddSwitchManagerTest.log" should contain:
      """
      :port_status result:true services:["add_port_status", "AddSwitchManagerTest"]
      """
    Then the file "../../tmp/log/AddSwitchManagerTest.log" should contain:
      """
      :state_notify result:true services:["add_state_notify", "AddSwitchManagerTest"]
      """

  Scenario: delete_forward_entry_from_switch_manager for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "DeleteSwitchManagerTest.rb" with:
      """
      class DeleteSwitchManagerTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = delete_forward_entry_from_switch_manager :vendor, "DeleteSwitchManagerTest" do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_switch_manager :packet_in, "DeleteSwitchManagerTest" do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_switch_manager :port_status, "DeleteSwitchManagerTest" do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = delete_forward_entry_from_switch_manager :state_notify, "DeleteSwitchManagerTest" do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./DeleteSwitchManagerTest.rb -c nw_dsl.conf -d`
    And wait until "DeleteSwitchManagerTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/DeleteSwitchManagerTest.log" should contain:
      """
      :vendor result:true services:[]
      """
    Then the file "../../tmp/log/DeleteSwitchManagerTest.log" should contain:
      """
      :packet_in result:true services:[]
      """
    Then the file "../../tmp/log/DeleteSwitchManagerTest.log" should contain:
      """
      :port_status result:true services:[]
      """
    Then the file "../../tmp/log/DeleteSwitchManagerTest.log" should contain:
      """
      :state_notify result:true services:[]
      """

  Scenario: set_forward_entries_to_switch_manager for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      """
    And a file named "SetSwitchManagerTest.rb" with:
      """
      class SetSwitchManagerTest < Controller
        include SwitchEvent
      
        def switch_ready datapath_id
          info "switch_ready %#x" % datapath_id
          oneshot_timer_event :test_start, 0 if datapath_id == 0x1
        end
      
        def test_start
          info "start test_start"
          
          succ = set_forward_entries_to_switch_manager :vendor, ["SetSwitchManagerTest","vendor"] do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = set_forward_entries_to_switch_manager :packet_in, ["SetSwitchManagerTest","packet_in"] do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = set_forward_entries_to_switch_manager :port_status, ["SetSwitchManagerTest","port_status"] do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
      
          succ = set_forward_entries_to_switch_manager :state_notify, ["SetSwitchManagerTest","state_notify"] do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "#{succ}"
          
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./SetSwitchManagerTest.rb -c nw_dsl.conf -d`
    And wait until "SetSwitchManagerTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/SetSwitchManagerTest.log" should contain:
      """
      :vendor result:true services:["SetSwitchManagerTest", "vendor"]
      """
    Then the file "../../tmp/log/SetSwitchManagerTest.log" should contain:
      """
      :packet_in result:true services:["SetSwitchManagerTest", "packet_in"]
      """
    Then the file "../../tmp/log/SetSwitchManagerTest.log" should contain:
      """
      :port_status result:true services:["SetSwitchManagerTest", "port_status"]
      """
    Then the file "../../tmp/log/SetSwitchManagerTest.log" should contain:
      """
      :state_notify result:true services:["SetSwitchManagerTest", "state_notify"]
      """

  Scenario: dump_forward_entries_from_switch_manager for each event type
    Given a file named "nw_dsl.conf" with:
      """
      vswitch { datapath_id 0x1 }
      event :vendor => "vendor", :packet_in => "packet_in", :port_status => "port_status", :state_notify => "state_notify"
      """
    And a file named "DumpSwitchManagerTest.rb" with:
      """
      class DumpSwitchManagerTest < Controller
        include SwitchEvent
      
        oneshot_timer_event :test_start, 0
      
        def test_start
          info "start test_start"
          dump_forward_entries_from_switch_manager :vendor do | success, services |
            info ":vendor result:#{success} services:#{services.inspect}"
          end
      
          dump_forward_entries_from_switch_manager :packet_in do | success, services |
            info ":packet_in result:#{success} services:#{services.inspect}"
          end
      
          dump_forward_entries_from_switch_manager :port_status do | success, services |
            info ":port_status result:#{success} services:#{services.inspect}"
          end
      
          dump_forward_entries_from_switch_manager :state_notify do | success, services |
            info ":state_notify result:#{success} services:#{services.inspect}"
          end
          info "exit test_start"
        end
      end
      """
    When I run `trema run ./DumpSwitchManagerTest.rb -c nw_dsl.conf -d`
    And wait until "DumpSwitchManagerTest" is up
    And *** sleep 1 ***
    Then the file "../../tmp/log/DumpSwitchManagerTest.log" should contain:
      """
      :vendor result:true services:["vendor"]
      """
    Then the file "../../tmp/log/DumpSwitchManagerTest.log" should contain:
      """
      :packet_in result:true services:["packet_in"]
      """
    Then the file "../../tmp/log/DumpSwitchManagerTest.log" should contain:
      """
      :port_status result:true services:["port_status"]
      """
    Then the file "../../tmp/log/DumpSwitchManagerTest.log" should contain:
      """
      :state_notify result:true services:["state_notify"]
      """
